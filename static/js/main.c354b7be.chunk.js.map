{"version":3,"sources":["components/SearchForm.js","components/ResultCards.js","utils/API.js","components/SearchResultContainer.js","App.js","index.js"],"names":["SearchForm","props","className","htmlFor","onChange","handleInputChange","value","search","name","type","placeholder","id","onClick","handleFormSubmit","ResultCards","results","map","result","src","picture","thumbnail","alt","firstName","first","last","email","phone","registered","date","axios","get","SearchResultContainer","state","event","target","setState","preventDefault","searchGiphy","API","then","res","data","catch","err","console","log","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"iNA8CeA,MAtBf,SAAoBC,GAClB,OACE,+BACE,sBAAKC,UAAU,aAAf,UACE,uBAAOC,QAAQ,SAAf,qBACA,uBACEC,SAAUH,EAAMI,kBAChBC,MAAOL,EAAMM,OACbC,KAAK,SACLC,KAAK,OACLP,UAAU,eACVQ,YAAY,yBACZC,GAAG,WAEL,wBAAQC,QAASX,EAAMY,iBAAkBX,UAAU,uBAAnD,0BCFOY,MAnBf,SAAqBb,GACjB,OACI,qBAAKC,UAAU,YAAf,SAEKD,EAAMc,QAAQC,KAAI,SAAAC,GAAM,OACrB,sBAAqBf,UAAU,OAA/B,UACI,qBAAKA,UAAU,6BAA6BgB,IAAKD,EAAOE,QAAQC,UAAWC,IAAKJ,EAAOK,YACvF,sBAAKpB,UAAU,YAAf,UACI,qBAAIA,UAAU,aAAd,UAA4Be,EAAOT,KAAKe,MAAON,EAAOT,KAAKgB,QAC3D,mBAAGtB,UAAU,YAAb,SAA0Be,EAAOQ,QACjC,mBAAGvB,UAAU,YAAb,SAA0Be,EAAOS,QACjC,mBAAGxB,UAAU,YAAb,SAAyB,uBAAOA,UAAU,aAAjB,SAA+Be,EAAOU,WAAWC,cANxEX,EAAON,U,iBChBlB,EACL,WACN,OAAOkB,IAAMC,IAND,iDCwDDC,E,4MApDbC,MAAQ,CACNzB,OAAQ,GACRQ,QAAS,I,EAsBXV,kBAAoB,SAAA4B,GAClB,IAAMzB,EAAOyB,EAAMC,OAAO1B,KACpBF,EAAQ2B,EAAMC,OAAO5B,MAC3B,EAAK6B,SAAL,eACG3B,EAAOF,K,EAKZO,iBAAmB,SAAAoB,GACjBA,EAAMG,iBACN,EAAKC,YAAY,EAAKL,MAAMzB,S,uDA7B9B,WAAqB,IAAD,OAClB+B,IACGC,MAAK,SAAAC,GAAG,OAAI,EAAKL,SAAS,CAAEpB,QAASyB,EAAIC,KAAK1B,aAC9C2B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,oBA6B9B,WACE,OACE,gCACE,cAAC,EAAD,CACEpC,OAAQuC,KAAKd,MAAMzB,OACnBM,iBAAkBiC,KAAKjC,iBACvBR,kBAAmByC,KAAKzC,oBAE1B,cAAC,EAAD,CAAaU,QAAS+B,KAAKd,MAAMjB,iB,GA/CLgC,aCErBC,MAJf,WACE,OAAO,cAAC,EAAD,K,MCCTC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.c354b7be.chunk.js","sourcesContent":["import React from \"react\";\n\n// function SearchForm(props) {\n//   return (\n//     <form>\n//       <div className=\"form-group\">\n//         <label htmlFor=\"search\">Search:</label>\n//         <input\n//           onChange={props.handleInputChange}\n//           value={props.search}\n//           name=\"search\"\n//           type=\"text\"\n//           className=\"form-control\"\n//           placeholder=\"Search for a Gif\"\n//           id=\"search\"\n//         />\n//         <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\n//           Search\n//         </button>\n//       </div>\n//     </form>\n//   );\n// }\n\nfunction SearchForm(props) {\n  return (\n    <form>\n      <div className=\"form-group\">\n        <label htmlFor=\"search\">Search:</label>\n        <input\n          onChange={props.handleInputChange}\n          value={props.search}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search for an Employee\"\n          id=\"search\"\n        />\n        <button onClick={props.handleFormSubmit} className=\"btn btn-primary mt-3\">\n          Search\n        </button>\n      </div>\n    </form>\n  );\n}\n\nexport default SearchForm;","import React from \"react\";\r\n\r\n// function ResultList(props) {\r\n//   return (\r\n//     <ul className=\"list-group\">\r\n//       {props.results.map(result => (\r\n//         <li className=\"list-group-item\" key={result.id}>\r\n//         {/* result.id.value? */}\r\n//           <img alt={result.name.first} className=\"img-fluid\" src={result.picture.thumbnail} />\r\n//           <p>{result.name.first} {result.name.last}</p>\r\n//           <p>Email: {result.email}</p>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// }\r\n\r\nfunction ResultCards(props) {\r\n    return (\r\n        <div className=\"card-deck\">\r\n            {/* each result will generate a card within the card-deck */}\r\n            {props.results.map(result => (\r\n                <div key={result.id} className=\"card\">\r\n                    <img className=\"card-img-top img-thumbnail\" src={result.picture.thumbnail} alt={result.firstName}/>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{result.name.first}{result.name.last}</h5>\r\n                        <p className=\"card-text\">{result.email}</p>\r\n                        <p className=\"card-text\">{result.phone}</p>\r\n                        <p className=\"card-text\"><small className=\"text-muted\">{result.registered.date}</small></p>\r\n                    </div>\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultCards;","import axios from \"axios\";\n// set to return users with US nationality\nconst BASEURL = \"https://randomuser.me/api/?nat=us?results=20\";\n// use to return a set amount of users, ex 20\n//const TWENTY = \"?results=20\";\n\nexport default {\n  search: function() {\n    return axios.get(BASEURL);\n  }\n};\n\n//// original movie query ////\n// const BASEURL = ?\n// const API = \"&apikey=trilogy\"\n// export default {\n//   search: function(query) {\n//     return axios.get(BASEURL + query + APIKEY);\n//   }\n// };\n","import React, { Component } from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport ResultCards from \"./ResultCards\";\r\nimport API from \"../utils/API\";\r\n\r\nclass SearchResultContainer extends Component {\r\n  state = {\r\n    search: \"\",\r\n    results: []\r\n  };\r\n\r\n  // When this component mounts, search the Giphy API for pictures of kittens\r\n  componentDidMount() {\r\n    API.search()\r\n      .then(res => this.setState({ results: res.data.results }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n  // original activity 19\r\n//   componentDidMount() {\r\n//     this.searchGiphy(\"kittens\");\r\n//   }\r\n\r\n//   searchGiphy = query => {\r\n//     API.search(query)\r\n//       .then(res => this.setState({ results: res.data.data }))\r\n//       .catch(err => console.log(err));\r\n//   };\r\n\r\n// To use search \r\n  handleInputChange = event => {\r\n    const name = event.target.name;\r\n    const value = event.target.value;\r\n    this.setState({\r\n      [name]: value\r\n    });\r\n  };\r\n\r\n  // When the form is submitted, search the Giphy API for `this.state.search`\r\n  handleFormSubmit = event => {\r\n    event.preventDefault();\r\n    this.searchGiphy(this.state.search);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <SearchForm\r\n          search={this.state.search}\r\n          handleFormSubmit={this.handleFormSubmit}\r\n          handleInputChange={this.handleInputChange}\r\n        />\r\n        <ResultCards results={this.state.results} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResultContainer;","import React from \"react\";\nimport SearchResultContainer from \"./components/SearchResultContainer\";\n\nfunction App() {\n  return <SearchResultContainer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}