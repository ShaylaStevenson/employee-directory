{"version":3,"sources":["components/SearchForm.js","components/SortForm.js","components/ResultCards.js","utils/API.js","components/SearchResultContainer.js","App.js","index.js"],"names":["SearchForm","props","className","htmlFor","onChange","handleSearchChange","value","search","name","type","placeholder","id","onClick","handleSearchSubmit","handleResetSubmit","SortForm","handleSortChange","sort","style","width","handleSortSubmit","ResultCards","results","map","result","first","last","src","picture","medium","alt","firstName","email","phone","location","city","state","dateFormat","registered","date","axios","get","BASEURL","SearchResultContainer","orgResults","event","target","setState","preventDefault","searchEmployees","query","foundEmployees","filter","employee","console","log","sortEmployees","newResults","a","b","reverse","API","then","res","data","catch","err","this","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d856f320.chunk.js","sourcesContent":["import React from \"react\";\n\n// sort form to be deployed \n// ref avtivity 19\nfunction SearchForm(props) {\n  return (\n    <form className=\"bg-dark text-light\">\n      <div className=\"form-group m-3 p-3\">\n        <label htmlFor=\"search\">Search by first name</label>\n        <input\n          onChange={props.handleSearchChange}\n          value={props.search}\n          //{this.state.search}\n          name=\"search\"\n          type=\"text\"\n          className=\"form-control\"\n          placeholder=\"Search for an Employee\"\n          id=\"search\"\n        />\n        <button onClick={props.handleSearchSubmit} className=\"btn btn-primary mt-3\">\n          Search\n        </button>\n        <button onClick={props.handleResetSubmit} type=\"submit\" className=\"btn btn-warning ml-2 mt-3\">\n          Reset\n        </button>\n      </div>\n    </form> \n  );\n}\n\nexport default SearchForm;\n\n    ","import React from \"react\";\r\n\r\n// sort form to be deployed \r\n// ref https://reactjs.org/docs/forms.html\r\n// refactored to be consistant with search form \r\nfunction SortForm(props) {\r\n  return (\r\n    <form className=\"bg-dark text-light\">\r\n        <div className=\"form-group m-3 p-3\">\r\n            <label htmlFor=\"sort\">Sort by name</label>\r\n                <select\r\n                    onChange={props.handleSortChange}\r\n                    value={props.sort}\r\n                    // {this.state.sort}\r\n                    name=\"sort\"\r\n                    className=\"form-control\"\r\n                    id=\"sort\"\r\n                    style={{width: \"100%\"}}\r\n                > \r\n                    <option value=\"\">Select your option</option>\r\n                    <option value=\"ascending\">ascending</option>\r\n                    <option value=\"decending\">decending</option>\r\n                </select>\r\n            <button onClick={props.handleSortSubmit} type=\"submit\" className=\"btn btn-primary mt-3\">\r\n              Sort\r\n            </button>\r\n            <button onClick={props.handleResetSubmit} type=\"submit\" className=\"btn btn-warning ml-2 mt-3\">\r\n              Reset\r\n            </button>\r\n      </div>\r\n    </form>  \r\n  );\r\n}\r\n\r\nexport default SortForm;","import React from \"react\";\r\n\r\n//use the npm package to format the hire date\r\nimport dateFormat from 'dateformat'\r\n\r\nfunction ResultCards(props) {\r\n    return (\r\n        <div className=\"container\">\r\n            {/* each result will display a card */}\r\n            {props.results.map(result => (\r\n            <div className=\"row my-1\">\r\n                <div key={result.id} className=\"card w-100 text-dark\">\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title bg-dark text-light p-3\">{result.name.first} {result.name.last}</h5>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-md-4\">\r\n                                <img className=\"card-img-top\" src={result.picture.medium} alt={result.firstName}/>\r\n                            </div>\r\n                            <div className=\"col-md-5\">\r\n                                <p className=\"card-text mt-1\">{result.email}</p>\r\n                                <p className=\"card-text mt-3\">{result.phone}</p>\r\n                                <p className=\"card-text mt-3\">{result.location.city}, {result.location.state}</p>\r\n                            </div>\r\n                            <div className=\"col-md-3\">\r\n                                <p className=\"card-text mb-0\">Hire Date</p>\r\n                                {/* use dateFormat to apply mask to returned date */}\r\n                                <p className=\"card-text\">{dateFormat(result.registered.date, \"mm / dd / yyyy\")}</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            ))}\r\n            {/* end card */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ResultCards;  ","import axios from \"axios\";\n// set to return users with US nationality\nconst BASEURL = \"https://randomuser.me/api/?nat=us\";\n// use to return a set amount of users, ex 20\nconst TWENTY = \"&results=20\"\n\n\nexport default {\n  search: function() {\n    return axios.get(BASEURL + TWENTY);\n  }\n};","import React, { Component } from \"react\";\r\nimport SearchForm from \"./SearchForm\";\r\nimport SortForm from \"./SortForm\";\r\nimport ResultCards from \"./ResultCards\";\r\nimport API from \"../utils/API\";\r\n\r\nclass SearchResultContainer extends Component {\r\n  state = {\r\n    search: \"\",\r\n    sort: \"\",\r\n    results: [],\r\n    orgResults: []\r\n  };\r\n\r\n  // when this component mounts, get random users\r\n  componentDidMount() {\r\n    API.search()\r\n      .then(res => this.setState({ \r\n        results: res.data.results,\r\n        // saves the original result array for reset element\r\n        orgResults: res.data.results   \r\n      }))\r\n      .catch(err => console.log(err));\r\n  }\r\n\r\n//////////// search elements////////////////\r\n  // to search for an employee by first name \r\n\r\n  // get the value and name of the input which triggered the change\r\n  // ref activity 17\r\n  handleSearchChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n  }; \r\n\r\n  // when the form is submitted, call the search employee function passing in `this.state.search`\r\n  handleSearchSubmit = event => {\r\n    event.preventDefault();\r\n    this.searchEmployees(this.state.search);\r\n    this.setState({\r\n      // this should clear the input field, but doesn't seem to be working\r\n      search: \"\"\r\n    });\r\n  };\r\n\r\n  // function to filter through results array to find first names that match the query \r\n  // ref activity 13\r\n  searchEmployees = query => {\r\n    // save results to a new array before manipulating\r\n    const newResults = [...this.state.results];\r\n    // use react filter to search for matching first names\r\n    const foundEmployees = newResults.filter(employee => employee.name.first === query);\r\n    // update results\r\n    this.setState({ results: foundEmployees})\r\n  };\r\n\r\n/////////////// sort elements //////////////\r\n  // to sort employees by ascending or decending order\r\n\r\n  // get the value and name of the input which triggered the change\r\n  handleSortChange = event => {\r\n    const { name, value } = event.target;\r\n    this.setState({ [name]: value });\r\n    console.log(\"sort value set...\")\r\n  };\r\n\r\n  // when the form is submitted, call the sort employee function passing in `this.state.sort`\r\n  handleSortSubmit = event => {\r\n    event.preventDefault();\r\n    this.sortEmployees(this.state.sort)\r\n  };\r\n\r\n  sortEmployees = query => {\r\n    console.log(\"sorting employees in \" + this.state.sort + \" order\")\r\n\r\n    // save results to a new array before manipulating\r\n    const newResults = [...this.state.results];\r\n\r\n    // compare first names and sort into ascending order\r\n    // ref https://stackoverflow.com/questions/6712034/sort-array-by-firstname-alphabetically-in-javascript\r\n    newResults.sort(function(a, b){\r\n      if(a.name.first < b.name.first) { return -1; }\r\n      if(a.name.first > b.name.first) { return 1; }\r\n      return 0;\r\n    });\r\n\r\n    // logic to determine if order should be in decending order\r\n    if (query === \"decending\") {\r\n      newResults.reverse();\r\n    } \r\n    // update results\r\n    this.setState({ results: newResults })\r\n  };\r\n\r\n  ///////////// reset element ////////////\r\n    // to return results to original array\r\n    handleResetSubmit = event => {\r\n      event.preventDefault();\r\n      this.setState({\r\n        results: this.state.orgResults,\r\n        search: \"\",\r\n        sort: \"\"\r\n      })\r\n      // attempts to clear input field on reset, but not working\r\n      //this.state.search.value = \"\";\r\n      //this.sort.value= \"\";\r\n      \r\n\r\n    }\r\n\r\n  // render the components to app\r\n  render() {\r\n    return (\r\n      <div className=\"container back-fade mt-3\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-4\">\r\n            <div>\r\n              <h1 className=\"display-3 text-dark pt-2 pl-2\">Employee Directory</h1>\r\n            </div>\r\n            <SearchForm\r\n              value={this.state.value}\r\n              handleSearchSubmit={this.handleSearchSubmit}\r\n              handleSearchChange={this.handleSearchChange}\r\n              handleResetSubmit={this.handleResetSubmit}\r\n            />\r\n            <SortForm\r\n              value={this.state.value}\r\n              handleSortSubmit={this.handleSortSubmit}\r\n              handleSortChange={this.handleSortChange}\r\n              handleResetSubmit={this.handleResetSubmit}\r\n            />\r\n          </div>\r\n          <div className=\"col-md-8\">\r\n            <ResultCards results={this.state.results} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchResultContainer;","import React from \"react\";\nimport SearchResultContainer from \"./components/SearchResultContainer\";\n\nfunction App() {\n  return <SearchResultContainer />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}